"""Subclass of dialog_text_base, which is generated by wxFormBuilder."""
from logging import exception
import os
import wx
import sys

from . import dialog_text_base

_APP_NAME = "SparkFun KiCad BOM Generator"

# sub folder for our resource files
_RESOURCE_DIRECTORY = os.path.join("..", "resource")

#https://stackoverflow.com/a/50914550
def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    base_path = getattr(sys, '_MEIPASS', os.path.dirname(os.path.abspath(__file__)))
    return os.path.join(base_path, _RESOURCE_DIRECTORY, relative_path)

def get_version(rel_path: str) -> str:
    try: 
        with open(resource_path(rel_path), encoding='utf-8') as fp:
            for line in fp.read().splitlines():
                if line.startswith("__version__"):
                    delim = '"' if '"' in line else "'"
                    return line.split(delim)[1]
            raise RuntimeError("Unable to find version string.")
    except:
        raise RuntimeError("Unable to find _version.py.")

_APP_VERSION = get_version("_version.py")

class Dialog(dialog_text_base.DIALOG_TEXT_BASE):

    def __init__(self, parent):
        dialog_text_base.DIALOG_TEXT_BASE.__init__(self, parent)
        
        # hack for some gtk themes that incorrectly calculate best size
        #best_size = self.BestSize
        #best_size.IncBy(dx=0, dy=30)
        #self.SetClientSize(best_size)

        self.SetTitle(_APP_NAME + " - " + _APP_VERSION)

        self.Bind(wx.EVT_SIZE, self.OnSize)
        
    def OnSize(self, event):
        size = self.GetClientSize()

        # Limit Refs column width

        cols = self.bomGrid.GetNumberCols()
        colWidth = 0
        for col in range(cols - 1):
            colWidth += self.bomGrid.GetColSize(col)
        newWidth = size.width - (colWidth
                                  + 50
                                ) # TODO: figure out how to do this properly!
        if newWidth < 0:
            newWidth = -1
        self.bomGrid.SetColSize(cols - 1, newWidth)

        cols = self.nonBomGrid.GetNumberCols()
        colWidth = 0
        for col in range(cols - 1):
            colWidth += self.nonBomGrid.GetColSize(col)
        newWidth = size.width - (colWidth
                                  + 50
                                ) # TODO: figure out how to do this properly!
        if newWidth < 0:
            newWidth = -1
        self.nonBomGrid.SetColSize(cols - 1, newWidth)

        if event is not None:
            event.Skip()


